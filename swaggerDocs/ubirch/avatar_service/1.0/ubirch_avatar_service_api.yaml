swagger: '2.0'
info:
  version: 1.0.0
  title: ubirch avatar service REST API
  description: |-
    This is the definition of the ubirch avatar service REST API containing the following parts:|
    - RAW data interface for syncronizing devices with their avatars
    - devices CRUD endpoints
schemes:
  - https
host: api.ubirch.dev.ubirch.com
basePath: /api/avatarService/v1
produces:
  - application/json
paths:
  /:
    get:
      tags:
        - avatar service
        - health
      summary: health monitor
      description: allows a quick check if the service is still up.
      responses:
        '200':
          description: everything is fine
          schema:
            $ref: '#/definitions/HealthResponse200'
        '400':
          description: something is not fine
          schema:
            $ref: '#/definitions/HealthResponse400'
  /check:
    get:
      tags:
        - avatar service
        - health
      summary: health monitor
      description: allows a quick check if the service is still up.
      responses:
        '200':
          description: everything is fine
          schema:
            $ref: '#/definitions/HealthResponse200'
        '400':
          description: something is not fine
          schema:
            $ref: '#/definitions/HealthResponse400'
  /deepCheck:
    get:
      tags:
        - avatar service
        - health
      summary: health monitor deep check
      description: allows a deep check of the service
      responses:
        '200':
          description: everything is fine
          schema:
            $ref: '#/definitions/DeepCheckHealthResponse200'
        '500':
          description: something is not fine
          schema:
            $ref: '#/definitions/DeepCheckHealthResponse500'
  /device/claim:
    post:
      tags:
        - avatar service
        - claim
      summary: user claiming a device
      description: Devices produce data and users own devices. For users to become a device owner they have to claim the device first.
      parameters:
        - in: body
          name: deviceToClaim
          description: the device sends its current state in a raw format
          required: true
          schema:
            $ref: '#/definitions/ClaimRequest'
        - in: header
          name: Authorization
          description: ubirch or Bearer token identifying the related user
          required: true
          type: string
      responses:
        '202':
          description: Successful response; returns configuration update for the device
          schema:
            $ref: '#/definitions/ClaimResponse'
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/ClaimError400'
        '500':
          description: Not successful response
          schema:
            $ref: '#/definitions/ClaimError500'
  /device/update/mpack:
    post:
      tags:
        - avatar service
        - raw data
      produces:
        - application/json
        - application/octet-stream
      consumes:
        - application/octet-stream
      summary: state update of device in message pack format with configuration update in response
      description: |-
        over this endpoint the devices  send regularly their states in message pack format (see ubirch protocol definition in "https://github.com/ubirch/ubirch-protocol");
        it is stored as it is in the raw data base and transformed by the avatar service into a processed message stored in the processed data base;
        the response always contains the configuration update for the device if no error occures; the response is also in message pack format (even error messages), except the js query parameter is set to true, then the response is responded in JSON format to be readable
      parameters:
        - in: body
          name: rawData
          description: 'the device sends its current state in message pack format, containing the information of the DeviceMessageObject (TODO `schema` needs to reference valid MessagePack)'
          required: true
          schema:
            $ref: '#/definitions/DeviceDataRaw'
        - in: query
          name: js
          type: boolean
          required: false
          default: false
          description: if set to true the response is responded in JSON format to be readable (for explanation purpose)
      responses:
        '200':
          description: |-
            Successful response; returns configuration update for the device
            * in message pack format if js=false (default) * in JSON format if js=true
          schema:
            $ref: '#/definitions/DeviceConfigObject'
        '400':
          description: |-
            No Successful response; returns error message
            * in message pack format if js=false (default) * in JSON format if js=true
          schema:
            $ref: '#/definitions/ErrorResponse'


definitions:
  HealthResponse200:
    description: response if server is healthy
    type: object
    required:
      - version
      - status
      - message
    properties:
      version:
        type: string
      status:
        type: string
        enum:
          - OK
          - NOK
      message:
        type: string
        description: welcome string with build information ( $GO_PIPELINE_NAME / $GO_PIPELINE_LABEL / $GO_PIPELINE_REVISION )
    example:
      version: '1.0'
      status: OK
      message: Welcome to the ubirchAvatarService ( BUILD_ubirch-avatar-service / git_rev_5b66c25_372 / 5b66c255eb3ba2a53be305cf2519d75b3b019b94 )
  HealthResponse400:
    allOf:
      - $ref: '#/definitions/HealthResponse200'
    example:
      version: '1.0'
      status: NOK
      message: this is some error message
  DeepCheckHealthResponse200:
    description: response of deep check if server is healthy
    type: object
    required:
      - status
      - message
    properties:
      status:
        type: string
        enum:
          - true
          - false
      message:
        type: array
        items:
          type: string
        description: array with all errors that occurred
    example:
      status: true
      message: []
  DeepCheckHealthResponse500:
    allOf:
      - $ref: '#/definitions/DeepCheckHealthResponse200'
    example:
      status: false
      message:
        - unable to connect to the database
  ErrorResponse:
    type: object
    description: error object with error code and message
    required:
      - version
      - status
      - errorType
      - errorMessage
    properties:
      version:
        type: string
        enum:
          - '1.0'
      status:
        type: string
        description: NOK because it's an error
        enum:
          - OK
          - NOK
      errorType:
        type: string
        enum:
          - RegistrationError
          - ErrorTimeOut
          - ErrorNotHandled
          - ErrorFatalIntern
          - ErrorMissingParams
          - ErrorParseJson
      errorMessage:
        type: string
        enum:
          - something went wrong with the registration
          - request could not be processed in time
          - request could not be handled
          - fatal internal error
          - missing parameters
          - cannot parse incoming json doc
  DeviceDataRaw:
    description: raw data sent between device and avatar service
    type: object
    required:
      - a
      - p
    properties:
      id:
        description: 'message id, UUID, usually device sends it''s messages without an ID, created on server when it receives a message without an ID'
        type: string
      v:
        description: |-
          (default: 0.0.3) protocol version:|

            * 0.0.0: unsigned message
            * 0.0.3: signed message with handle to previous signature in message chain; parameter s and chainedHash required

        type: string
      fw:
        description: '(default: n.a.) -- TODO add description'
        type: string
      umv:
        description: ubirch protocol main version
        type: string
      usv:
        description: ubirch protocol sub version
        type: string
      a:
        description: hashed hardware device ID
        type: string
      did:
        description: deviceHardwareId
        type: string
      ts:
        description: timestamp of creation of this message
        type: string
        format: date-time
      k:
        description: public key
        type: string
      s:
        description: hashed auth token or public key
        type: string
      ps:
        description: signature of message prior to this one
        type: string
      mpraw:
        description: raw hex encoded MessagePack message
        type: string
      mppay:
        description: raw hex encoded MessagePack payload
        type: string
      p:
        description: (JSON) payload in a raw data format; can be a single message object OR an array of message objects; properties of the message object depends on the device type
        type: object
      config:
        description: current device configuration as JSON
        type: object
      meta:
        description: TODO add description
        type: object
      deviceId:
        description: TODO add description
        type: string
      deviceName:
        description: TODO add description
        type: string
      txHash:
        description: hash of related blockchain anchor
        type: string
      txHashLink:
        description: related chain explorer text-link
        type: string
      txHashLinkHtml:
        description: related chain explorer html-link
        type: string
      deviceType:
        description: type of device
        type: string
      tags:
        description: set of tags
        type: array
        items:
          type: string
      refId:
        description: TODO add description
        type: string
    example:
      id: 8aa3d0ec-9ec8-4785-93e9-6fd1705dace6
      v: 0.0.3
      a: nNeA0pqvk2jFw+sGFpTUBzAT5Jpk54Pi1QffnL5mtR3U8Zs6iyPRT5AxTPxtIgwEDTr65i3H84jphnpLBLVwtg==
      s: guwm0lQho14EnoZUurLmr1n6qocWG8nxXUBoHyi04ycuXlNRFuZOgywnCVMsgu3Th7FZGJBQMSscti+fJ6P2Aw==
      ts: '2016-06-30T11:39:51Z'
      p:
        t: 28.58
        p: 1013.04
        h: 32.52
        a: 1.75
        la: '52.478680'
        lo: '13.369360'
        ba: 100
        lp: 0
        e: 0
      config:
        i: 1900
        bf: 0
      txHash: guwm0lQho14EnoZUurLmr1n6qocWG8nxXUBoHyi04ycuXlNRFuZOgywnCVMsgu3Th7FZGJBQMSscti+fJ6P2Aw==
      deviceType: lightsLamp
      tags:
        - 'ubirch#0'
        - actor
  DeviceConfigObject:
    description: configuration in a raw data format to update device configuration
    type: object
    allOf:
      - $ref: '#/definitions/DeviceDataRaw'
    example:
      id: f9fdd585-a411-4a7a-82ef-2b3bcfedd926
      v: 0.0.0
      a: MC0wCAYDK2VkCgEBAyEA6dhKwQYCrE2gGcItXZGxc7Wi01jKaej9QvR3QCxxFlo=
      p:
        i: 900
      ts: '2017-08-01T11:09:03.797Z'
  ClaimRequest:
    description: request for claiming a device
    type: object
    required:
      - hwDeviceId
    properties:
      hwDeviceId:
        type: string
        description: hwardware id of the device to be claimed
    example:
      hwDeviceId: 07a1d44f-4c1f-4863-8a39-1440e94476f6
  ClaimResponse:
    description: response of a successful device claiming call
    type: object
    required:
      - hwDeviceId
      - deviceId
      - userId
    properties:
      hwDeviceId:
        type: string
        description: hardware id of the claimed device
      deviceId:
        type: string
        description: id of the claimed device
      userId:
        type: string
        description: id of the user now owning the device
    example:
      hwDeviceId: 07a1d44f-4c1f-4863-8a39-1440e94476f6
      deviceId: 5df0c9b7-564a-4b90-8f1b-998fbe1a1cbf
      userId: 586fb973-6bb2-4b26-8898-0f3eaf141308
  ClaimError400:
    allOf:
      - $ref: '#/definitions/ErrorResponse'
    example:
      version: '1.0'
      status: NOK
      errorType: DeviceClaimError
      errorMessage: a short error description
  ClaimError500:
    allOf:
      - $ref: '#/definitions/ErrorResponse'
    example:
      version: '1.0'
      status: NOK
      errorType: DeviceClaimError
      errorMessage: a short error description
